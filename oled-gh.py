# Display Image & text on I2C driven ssd1306 OLED display 
from machine import Pin, I2C
from ssd1306 import SSD1306_I2C
import framebuf

reset = machine.Pin(10, machine.Pin.OUT)
reset.value(1)

WIDTH  = 128                                            # oled display width
HEIGHT = 64                                             # oled display height

i2c = I2C(0, scl=Pin(9), sda=Pin(8), freq=200000)       # Init I2C using pins GP8 & GP9 (default I2C0 pins)
device_list=i2c.scan()
print(len(device_list))

for i in range(0, len(device_list)):
    print(str(device_list[i]))

oled = SSD1306_I2C(WIDTH, HEIGHT, i2c)                  # Init oled display

# Raspberry Pi logo as 32x32 bytearray
buffer = bytearray(b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1f\xf0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\xfc\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00<\x07\xc0x\x00\x00\x00\x00\x00\x00\x00\x1f\x80\x00\x00\x00\xfc\x03\x80\xff\x00\x00\x00\x00\x00\x00\x00\x7f\xe0\x00\x00\x07\xfe\x03\x80\xff\xc0\x00\x00\x00\x00\x00\x01\xfc<\x00\x00\x1f\xff\x01\x01\xff\xf0\x00\x00\x00\x00\xf0\x03\xf8\x1e\x00\x00?\xff\x81\x03\xff\xf8\x00\x00\x00\x07\xe0\x07\xf0\x0f\x00\x00\x7f\xf8\x01\x00?\xfc\x00\x00\x00?\xe0\x0f\xe0\x07\x00\x00\xfc\x00\x00\x00\x00\xfe\x00\x00\x00\x0f\xc0\x0f\xe0\x03\x00\x00x\x00\x02\x00\x00<\x00\x00@\x0f\xc0\x0f\xe0\x02\x00\x00x\x00\x0f\xf0\x00,\x00\x07\xc0\x07\xe0\x1f\xc0\x03\x00\x00\x0c\x00\x18p\x00p\x00\x03\xf0\x0f\xc0\x1f\xc0\x00 \x00\x00\x008\x18\x00\x00\x00\x01\xf8\x07\xc0\x1f\xc0\x00?\xe9\xd0wx\x19\xdcl7a\xf8\x0f\xe0\x1f\x80\x00\x1f\xfc\xf0>x\x18\xf0>\x1f\x81\xfc\x07\xc0?\x80\x00\x1e\x0cx\x1c|\x04\xf0<\x0f\x01\xff\x0f\xc0?\x80\x00\x1e\x04x\x1c~\x00\xf0<\x0f\x01\xff\x87\xc0?\x80\x00\x1e\x04|<\x7f\x00\xf0<\x07\x81\xfb\x8f\xe0?\x80\x00\x1e\x00~\x1c?\xc0\xf0<\x0f\x01\xf9\xe7\xc0?\x83\xff\xde\x00\x7f\x1c?\xe0\xf0<\x0f\x01\xf8\xf7\xc0\x1f\x80\xff\x9ex{<\x1f\xf0\xf0<w\x81\xf8\x7f\xc0\x1f\x80\x7f\x1b\xf8{\x9c\x0f\xf8\xff\xfc\x7f\x01\xf8?\xe0\x1f\xc0?\x17\xf8y\x9c\x07\xf8\xff\xfc\xff\x01\xf8\x1f\xc0\x1f\xc0?\x0f\xfcx\xfc\x03\xfc\xff\xfd\xf7A\xf8\x0f\xc0\x1f\xc0?\x1f\x80x\xdc\x00\xfc\xf0<\x0fa\xf8\x07\xe0\x0f\xc0?>\x00x|\x00|\xf0<\x0fq\xf8\x07\xc0\x0f\xe0?~\x02x<@<\xf0<\x0f\xb1\xf8\x07\xc0\x07\xe0?^\x02x<@<\xf0<\x0f\t\xf8\x07\xc0\x03\xf0?\x1e\x06x\x1c`\x1c\xf0<\x07\x01\xf8\x07\xe0\x01\xf8>\x1e\x0cx\x0cp\x1c\xf0<\x0f\x83\xf8\x03\xc0\x00\xfe<?\xfc\xf8\x0ep8\xf0>\x1f\x83\xfc\x03\xc0\x00\x7f\xf0?\xfd\xfc\x06|x\xfc|?\xe7\xfe\x01\xe0\x00\x00\x00\x00\x00\x00\x02/\xe1\x80\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1e\x07\x0c\x07\x80\x0e\x00\x10\x07p\x00\x00\x00\x00\x00\x00\x0c\x03\x9c\x03`\x0e\x00v\x05\xd0\x00\x00\x00\x00\x00\x00\x0c\x03\x9c\x03p\x0e\x00\xe2\x01\xc0\x00\x00\x00\x00\x00\x00\x0c\x03\xac\x03p\x07\x00\xc0\x01\xc0\x00\x00\x00\x00\x00\x00\x0c\x02\xec\x03`\x13\x00\xc0\x01\xc0\x00\x00\x00\x00\x00\x00\x0c\x02\xcc\x03\x00\x17\x00\xc0\x01\xc0\x00\x00\x00\x00\x00\x00\x0c\x02\xcc\x03\x00\x01\x80\xe2\x01\xc0\x00\x00\x00\x00\x00\x00\x0c\x02L\x07\x00!\x80|\x01\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00')
# Load the raspberry pi logo into the framebuffer (the image is 32x32)
fb = framebuf.FrameBuffer(buffer, 128, 64, framebuf.MONO_HLSB)

# Clear the oled display in case it has junk on it.
oled.fill(0)

# Blit the image from the framebuffer to the oled display
oled.blit(fb, 0, 0)

# Add some text


# Finally update the oled display so the image & text is displayed
oled.show()
